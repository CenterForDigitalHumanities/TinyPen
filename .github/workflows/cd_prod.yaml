name: TinyPen production deploy on push to main.
on:
  push:
    branches: main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Create .env from secrets
        uses: SpicyPizza/create-envfile@v2
        with:
          envkey_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          envkey_REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
          envkey_RERUM_REGISTRATION_URL: ${{ secrets.RERUM_REGISTRATION_URL }}
          envkey_RERUM_API_ADDR: ${{ secrets.RERUM_API_ADDR }}
          envkey_RERUM_ID_PATTERN: ${{ secrets.RERUM_ID_PATTERN }}
          envkey_RERUM_ACCESS_TOKEN_URL: ${{ secrets.RERUM_ACCESS_TOKEN_URL }}
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: "21"
      - name: Cache node modules
        uses: actions/cache@master
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies and run the test
        run: |
          npm install
          npm run runtest
  deploy:
    needs:
      - test
    strategy:
      matrix:
        machines:
          - vlcdhprdp02
    runs-on: ${{ matrix.machines }}
    steps:
      - uses: actions/checkout@master
      - name: Deploy the app on the server
        run: |
          if [[ ! -e /srv/node/logs/tinypen.txt ]]; then
              mkdir -p /srv/node/logs
              touch /srv/node/logs/tinypen.txt
          fi
          cd /srv/node/tiny-node/
          pm2 stop tinyPen
          git stash
          git pull
          npm install
          pm2 start -i max bin/tinyPen.js
